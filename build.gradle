plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id "org.openapi.generator" version "6.0.0"
}

group = 'com.example'
version = '1.0.9-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.3'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    //implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.flywaydb:flyway-core:9.5.1'

    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def spec = "$rootDir/src/main/resources/openapi.yaml".toString()
def generatedSourcesDir = "$rootDir/src/generated-src".toString()

openApiGenerate {

    generatorName.set("spring")
    generateApiDocumentation.set(false)
    inputSpec = spec
    outputDir = generatedSourcesDir
    modelNameSuffix.set("Dto")

    configOptions = [
            useTags                : 'true',
            dateLibrary            : 'java8',
            interfaceOnly          : 'true',
            skipDefaultInterface   : 'true',
            useApiIgnore           : 'false',
            swaggerAnnotations     : 'true',
            hideGenerationTimestamp: "true",
            implicitHeaders        : "true"
    ]
    globalProperties = [
            modelDocs: 'false',
            apis     : '',
            models   : ''
    ]

}

openApiValidate {
    inputSpec = spec
}

tasks.openApiGenerate.dependsOn tasks.openApiValidate

compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    getByName("main") {
        java {
            srcDir("$generatedSourcesDir/src/main/java")
        }
    }
}
